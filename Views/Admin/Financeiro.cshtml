@model IEnumerable<AgendaTatiNails.Models.Agendamento>
@using AgendaTatiNails.Models.ViewModels

@{
    ViewData["Title"] = "Relatório Financeiro";
    
    // Pega os dados calculados que o Controller enviou pelo ViewBag
    var faturamentoTotal = (decimal)(ViewBag.FaturamentoTotal ?? 0m);
    var totalServicos = (int)(ViewBag.TotalServicosConcluidos ?? 0);
    var faturamentoPorServico = (List<ServicoFaturadoViewModel>)(ViewBag.FaturamentoPorServico ?? new List<ServicoFaturadoViewModel>());
}

@section Styles {
    <link rel="stylesheet" href="~/css/Admin/admin.css" asp-append-version="true" />
}

<div class="admin-container">
    <div class="admin-header">
        <h1>@ViewData["Title"]</h1>
        <span class="welcome-badge" style="background-color: #15803d;">@User.Identity.Name</span>
    </div>

    
    <div class="stat-card-grid" style="margin-top: 2rem;">
        <div class="stat-card">
            <div class="stat-card-icon icon-bg-green">
                <img src="https://api.iconify.design/lucide-dollar-sign.svg" alt="" />
            </div>
            <div class="stat-card-info">
                <span class="stat-card-value">@faturamentoTotal.ToString("C", new System.Globalization.CultureInfo("pt-BR"))</span>
                <span class="stat-card-label">Faturamento Total (Concluídos)</span>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-card-icon icon-bg-purple">
                <img src="https://api.iconify.design/lucide-check-check.svg" alt="" />
            </div>
            <div class="stat-card-info">
                <span class="stat-card-value">@totalServicos</span>
                <span class="stat-card-label">Serviços Concluídos</span>
            </div>
        </div>
    </div>

    <h2 class="admin-subtitle">Resumo por Serviço</h2>
    @if (faturamentoPorServico.Any())
    {
        <ul class="finance-breakdown-list">
            @foreach (var servico in faturamentoPorServico)
            {
                <li>
                    <div class="breakdown-service-name">
                        @servico.ServicoNome
                        <span>(@servico.Quantidade x)</span>
                    </div>
                    <div class="breakdown-service-total">
                        @servico.Total.ToString("C", new System.Globalization.CultureInfo("pt-BR"))
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p>Nenhum serviço concluído encontrado para gerar um resumo.</p>
    }


    <h2 class="admin-subtitle">Histórico de Serviços Concluídos</h2>
    @if (Model.Any())
    {
        <div class="table-responsive">
            <table class="admin-table">
                <thead>
                    <tr>
                        <th>Cliente</th>
                        <th>Data Conclusão</th>
                        <th>Serviço</th>
                        <th>Valor (R$)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model) @* O Model só contém os concluídos *@
                    {
                        <tr>
                            <td class="client-name">@(item.Cliente?.Nome ?? "N/A")</td>
                            <td>@item.DataHora.ToString("dd/MM/yyyy 'às' HH:mm")</td>
                            <td>@(item.Servico?.Nome ?? "N/A")</td>
                            <td style="color: #15803d; font-weight: 500;">
                                @(item.Servico?.Preco.ToString("C", new System.Globalization.CultureInfo("pt-BR")) ?? "R$ 0,00")
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="text-center mt-5 no-appointments">
            <img src="https://api.iconify.design/lucide-archive.svg" alt="Arquivo Vazio" class="no-appointments-icon" />
            <p class="lead">Nenhum agendamento concluído encontrado.</p>
        </div>
    }
</div>